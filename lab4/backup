#!/bin/bash

userDir="/home/user"
sourceDir="/home/user/source"
backupRep="/home/user/backup-report"

function filesReport() {
	files=("$@")
	for file in "${files[@]}"
	do
		echo "|---$file" >> $backupRep
	done
}

function newFilesReport() {
	echo "" >> $backupRep
	if [[ $1 == "new" ]]
	then
		echo "$2 was created at $3." >> $backupRep
		echo "New files: " >> $backupRep
	else
		echo "$2 was updated at $3." >> $backupRep
		echo "New files: " >> $backupRep
	fi
}

function changedFilesReport() {
	echo "Changed files: " >> $backupRep
}

function finishReport() {
	echo "Success: backup was created"
}

date=$(date +%F)
backupName='^Backup-[0-9]{4}-[0-9]{2}-[0-9]{2}'
files=$(ls $sourceDir)
newFiles=()
oldFiles=()

lastBackup=$(ls $userDir | grep -E "$backupName" | sort -n | tail -1)
lastBackupDate=$(echo "$lastBackup" | awk -F "-" '{print $2"-"$3"-"$4}')

dateInDays=$(echo $date | awk -F "-" '{print $1*365*24*60 + $2*30 + $3}')
lastDateInDays=$(echo $lastBackupDate | awk -F "-" '{print $1*365*24*60 + $2*30 + $3}')
dateDiff=$(echo $dateInDays - $lastDateInDays | bc -l)

if [[ -z $lastBackup || $dateDiff -ge 7 ]]
then
	newBackup="Backup-"$date
	mkdir $userDir/$newBackup
	backupDir=$userDir/$newBackup

	for file in $files
	do
		cp $sourceDir/$file $backupDir
		newFiles+=("$file")
	done

	newFilesReport "new" "$newBackup" "$date"
	filesReport "${newFiles[@]}"
	finishReport
else
	newBackup="Backup-"$lastBackupDate
	backupDir=$userDir/$newBackup
	for file in $files
	do
		new="$sourceDir/$file"
		old="$backupDir/$file"
		if [[ -z $old ]]
		then
			newFiles+=("$file")
		else
			newSize=$(ls -l $new | awk '{print $5}')
			oldSize=$(ls -l $old | awk '{print $5}')
			if [[ $newSize -ne $oldSize ]]
			then
				mv $old $old.$date
				oldFiles+=("$file--renamed_to--$file.$date")
			else
				continue
			fi
		fi
		cp $new $backupDir
	done
	newFilesReport "update" "$newBackup" "$date"
	filesReport "${newFiles[@]}"
	changedFilesReport
	filesReport "${oldFiles[@]}"
	finishReport
fi



